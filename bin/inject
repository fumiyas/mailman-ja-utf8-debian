#! @PYTHON@
#
# Copyright (C) 2002-2016 by the Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
# USA.

"""Inject a message from a file into Mailman's incoming queue.

Usage: inject [options] [filename]

Options:

    -h / --help
        Print this text and exit.

    -l listname
    --listname=listname
        The name of the list to inject this message to.  Required.

    -q queuename
    --queue=queuename
        The name of the queue to inject the message to.  The queuename must be
        one of the directories inside the qfiles directory.  If omitted, the
        incoming queue is used.

filename is the name of the plaintext message file to inject.  If omitted,
standard input is used.
"""

import sys
import os
import getopt

import paths
from Mailman import mm_cfg
from Mailman import Utils
from Mailman import Post
from Mailman.i18n import C_



def usage(code, msg=''):
    if code:
        fd = sys.stderr
    else:
        fd = sys.stdout
    print >> fd, C_(__doc__)
    if msg:
        print >> fd, msg
    sys.exit(code)



def main():
    try:
        opts, args = getopt.getopt(
            sys.argv[1:], 'hl:q:L',
            ['help', 'listname=', 'queue=', 'showqnames'])
    except getopt.error, msg:
        usage(1, msg)

    qdir = mm_cfg.INQUEUE_DIR
    listname = None

    for opt, arg in opts:
        if opt in ('-h', '--help'):
            usage(0)
        elif opt in ('-q', '--queue'):
            qdir = os.path.join(mm_cfg.QUEUE_DIR, arg)
            if not os.path.isdir(qdir):
                usage(1, C_('Bad queue directory: %(qdir)s'))
        elif opt in ('-l', '--listname'):
            listname = arg.lower()

    if listname is None:
        usage(1, C_('A list name is required'))
    elif not Utils.list_exists(listname):
        usage(1, C_('No such list: %(listname)s'))

    if len(args) == 0:
        # Use standard input
        msgtext = sys.stdin.read()
    elif len(args) == 1:
        fp = open(args[0])
        msgtext = fp.read()
        fp.close()
    else:
        usage(1)

    Post.inject(listname, msgtext, qdir=qdir)



if __name__ == '__main__':
    main()
