#! @PYTHON@
#
# Copyright (C) 2001-2007 by the Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
# USA.

"""List all the owners of a mailing list.

Usage: %(program)s [options] listname ...

Where:

    --all-vhost=vhost
    -v=vhost
        List the owners of all the mailing lists for the given virtual host.

    --all
    -a
        List the owners of all the mailing lists on this system.

    --help
    -h
        Print this help message and exit.

`listname' is the name of the mailing list to print the owners of.  You can
have more than one named list on the command line.
"""

import sys
import getopt

import paths
from Mailman import MailList, Utils
from Mailman import Errors
from Mailman.i18n import _

COMMASPACE = ', '

program = sys.argv[0]



def usage(code, msg=''):
    if code:
        fd = sys.stderr
    else:
        fd = sys.stdout
    print >> fd, _(__doc__)
    if msg:
        print >> fd, msg
    sys.exit(code)



def main():
    try:
        opts, args = getopt.getopt(sys.argv[1:], 'hv:a',
                                   ['help', 'all-vhost=', 'all'])
    except getopt.error, msg:
        usage(1, msg)

    listnames = [x.lower() for x in args]
    vhost = None
    for opt, arg in opts:
        if opt in ('-h', '--help'):
            usage(0)
        elif opt in ('-a', '--all'):
            listnames = Utils.list_names()
        elif opt in ('-v', '--all-vhost'):
            listnames = Utils.list_names()
            vhost = arg

    for listname in listnames:
       try:
           mlist = MailList.MailList(listname, lock=0)
       except Errors.MMListError, e:
           print _('No such list: %(listname)s')
           continue

       if vhost and vhost <> mlist.host_name:
           continue

       owners = COMMASPACE.join(mlist.owner)
       print _('List: %(listname)s, \tOwners: %(owners)s')



if __name__ == '__main__':
    main()
