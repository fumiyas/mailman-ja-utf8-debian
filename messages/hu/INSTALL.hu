Mailman - The GNU Mailing List Management System
Copyright (C) 1998-2004 Free Software Foundation, Inc.
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA

Ebben az állományban a GNU Mailman telepítéséhez találunk útmutatót,
amely a GNU szabványos autoconf programjával történik. Legelõször a
rendszeren kell bizonyos beállításokat (ezekrõl alább lehet olvasni)
elvégezni, s csak ezek után kell a Mailman programot konfigurálni és
telepíteni.

FONTOS: A crontab beállításra fordítsunk különös figyelmet, ahogy az
a lentebb le van írva, különben a Mailman nem fog megfelelõen mûködni.

FRISSÍTÉS: A frissítés legtöbbször nem jelent mást, mint a régi 
verzióra egy új verzió másolását. Azonban frissítés elõtt ajánljuk el-
olvasásra az UPGRADING állományban található fontos információkat.

A GNU Mailman honlapjának címe: http://www.list.org

A programot le lehet tölteni a következõ címrõl:
http://sf.net/project/showfiles.php?group_id=103


0. Telepítési igények

    Rendelkeznünk kell egy levelezõszerverrel (MTA), ahová a leveleket
    lehet küldeni, és egy webszerverrel, amely támogatja a CGI/1.1 API-t.
    Webszervernek az Apache megfelelõ választás, míg MTA-nak a Postfix,
    az Exim, a Sendmail és qmail közül bármelyik megfelel.

    Ezenfelül egy ANSI C fordítóval is rendelkeznünk kell, amelynek 
    segítségével lehet a biztonsági követelményeknek megfelelõ wrapper
    programokat elõállítani. GNU C fordítója, a gcc 2.8.1 vagy ennél
    frissebb megfelel a célnak. A gcc beszerzésérõl bõvebben a 
    következõ oldalon olvashatunk:

        http://gcc.gnu.org
    
    A Python feldolgozó nyelvnek is telepítve kell lennie a rendszeren. 
    A megfelelõ mûködéshez jelenleg a Python 2.1.3-as vagy 2.2.1-es
    verziója ajánlott. Bõvebb információt a Python forráskódjának, vagy
    RPM csomagjának és lefordított bináris változatának beszerzésérõl a
    következõ oldalon olvashatunk:

        http://www.python.org

    Ha a Python-t forráskódjából szeretnénk telepíteni, akkor az Unix-
    típusú operációs rendszereknél elegendõ a hagyományos parancsokat,
    "./configure; make install" kiadni. A "make test" futtatásánál jó 
    pár tesztelési lépést át lesz ugorva -- de ne aggódjunk, ezekre a 
    funkciókra valószínûleg nem is lesz szükségünk. A Mailman csak azokat
    az alapvetõ funkciókat használja, amelyek minden gépen megtalálhatóak.
    
    Ha találunk a levelezõszerverünkhöz (MTA) README.<MTA-nk> állományt,
    akkor olvassuk el azt. A Mailman egyes MTA-kkal képes fejlettebb
    együttmûködésre (pl. listák automatikus létrehozása, megszüntetése
    webfelületrõl). Ilyen levelezõszerver az Exim vagy a Postfix. A 
    levelezõszerverhez szükséges beállításokról a megfelelõ README
    állományokban lehet olvasni.


1. A rendszer beállítása

    A következõ lépésekhez root jogokkal kell rendelkeznünk.

    A Mailman program telepítése elõtt a rendszerhez kell adni a 
    megfelelõ felhasználót és csoportot.

    - Hozzunk létre egy új felhasználót `mailman' névvel. Ez legtöbbször
      az /etc/passwd állományba kerül bejegyzésre. Ha a `mailman'
      felhasználónév már foglalt, akkor bármilyen más egyedi nevet
      választhatunk, ekkor olvassuk el a --with-username kapcsolónál
      található megjegyzést.
     
    - Hozzunk létre egy `mailman' nevû csoportot. Ez legtöbbször az
      /etc/group állományba kerül bejegyzésre. A Mailman állományai a
      `mailman' csoport tulajdonában kerülnek telepítésnél, set-group-id
      bit jogokkal. Ezzel mind a webes, mind a levelezõprogramok együtt 
      tudnak mûködni. Ha a `mailman' csoportnév már foglalt, akkor 
      bármilyen más egyedi nevet megadhatunk. Ekkor olvassuk el alább
      a --with-groupname kapcsolónál található megjegyzést. Az elõzõ 
      lépésben létrehozott mailman felhasználó tagja kell, hogy legyen
      ennek a csoportnak.

    - Hozzunk létre egy könyvtárat, ahová a programot telepíteni fogjuk
      (ezt a továbbiakban $prefix-nek nevezzük). A Mailman összes
      állománya a $prefix-ben megadott könyvtárba fog kerülni.
      A "configure --help" paranccsal a különbözõ telepítési 
      kapcsolókról lehet többet megtudni.

      A Mailman 2.1 alapértelmezett telepítési könyvtára az 
      /usr/local/mailman. Mailman 2.1alpha2-nél régebbi verzióknál ez
      a /home/mailman könyvtár volt. Az alapértelmezett beállítást
      a configure parancs --prefix kapcsolójával lehet megváltoztatni.
      Ha Mailman 2.1-nél régebbi verziót szeretnénk frissíteni, akkor
      külön meg kell adnunk a --prefix kapcsolót, hacsak nem akarjuk a
      listákat magunktól áthelyezni (ez elõnyõs lehet, ha saját magunk
      szeretnénk a frissítést elvégezni).
      
      Néhány rendszeren az /usr/local könyvtárat tartalmazó partíción 
      tiltva van a SUID programok futtatása. A Mailman rendes mûködéséhez
      'set-gid'-es programokat használ, ezért az ilyet nem támogató
      partíciókra nem célszerû telepíteni a programot.
      Ha a rendszer ilyen partícióval rendelkezik, akkor a Mailman-t
      olyan könyvtárba kell telepíteni, ahol engedélyezett a setgid
      programok futása.
      
      Gyõzõdjünk meg arról hogy a telepítés könyvtára a `mailman'
      (vagy a --with-groupname-nél megadott) csoport tulajdonában
      van és rendelkezik a setgid bit-tel (BSD rendszergazdák olvassák
      el a README.BSD állományt bõvebb információért). A könyvtárat
      ezenfelül mindenki számára elérhetõvé és futtathatóvá kell
      tenni. Ezt pl. a következõ parancsokkal lehet biztosítani:

          % cd $prefix
          % chgrp mailman .
          % chmod a+rx,g+ws .

      Ezek után lehet a Mailman-t telepítésre felkészíteni, majd
      telepíteni.


2. configure futtatása

    A --with-mail-gid ÉS --with-cgi-gid KAPCSOLÓKRA VALÓSZÍNÛLEG
    SZÜKSÉGÜNK LESZ EZÉRT OLVASSUK EL A HOZZÁJUK TARTOZÓ LEÍRÁST!

    A következõkben leírt parancsokhoz nem kell root jogokkal 
    rendelkeznünk. A saját bejelentkezési nevünk alatt, vagy azon névvel,
    amellyel általában telepítjük a programokat is végrehajthatjuk a
    következõ parancsokat. Nem szükséges mailman felhasználóként sem
    a lépéseket követni, de akár mailman-ként is dolgozhatunk. Azonban
    gyõzõdjünk meg róla, hogy az alkalmazott felhasználóinév tagja-e a
    mailman csoportnak, mivel az elõzõ lépésben létrehozott könyvtárhoz
    írási joggal rendelkezik a mailman csoport.

    Fontos, hogy a telepítés könyvtárához legyen írási jogunk, valamint
    setgid beállítási lehetõség (NFS és más köteteket be lehet
    állítani úgy, hogy ne vegyék figyelembe a setgid beállításokat).

    Ha már telepítettünk más GNU programot, akkor a configure szkript
    ismerõs lehet. Általában a program forráskönyvtárában kell
    lépni és a configure parancsot kiadni kapcsolók nélkül:

        % cd mailman-<verzió>
        % ./configure
        % make install

    A következõ kapcsolókkal lehet a Mailman telepítést befolyásolni.

      --prefix=<dir>
            Hagyományos GNU configure kapcsoló, amellyel megadható
	    a könyvtár neve, ahova a Mailmant telepítjük. Alapesetben
	    a $prefix értéke /usr/local/mailman. A könyvtárnak léteznie
	    kell és a fenn leírtaknak megfelelõen beállítva kell
	    lennie.

      --exec-prefix=<dir>
            Hagyományos GNU configure kapcsoló, amellyel a rendszerre
	    jellemzõ lefordított (bináris) állományok telepítési
	    helyét lehet megadni.

      --with-var-prefix=<dir>
            Változó állományok, mint a list archívuma és a beállításait
            tartalmazó konfigurációs állományok a <dir> könyvtárba
            kerüljenek, ne pedig a prefix-ben vagy exec_prefix-ben
	    megadottba.

      --with-python=</path/to/python>
            Egyéni Python parancsfeldolgozó elérési útjának megadása
	    a wrapper programok számára. Alapesetben a burok $PATH
	    környezeti változójában legelõször megtalált parancsfel-
	    dolgozó ez. Jó tudni, hogy a szkriptek parancssorbóli
	    futtatásakor mindig a $PATH alapján legelõször megtalált
	    Pyton parancsértelmezõ kerül felhasználásra.

      --with-username=<felhasználónév-vagy-uid>
            Megadja, hogy milyen a `mailman'-tól eltérõ felhasználónév
	    legyen az alapértelmezett. Csak akkor használjuk, ha a
	    `mailman' felhasználónevet már más valaki használja (pl.
	    Mark Ailman bejelenetkezõ neve). Név helyett annak 
	    azonosító számát (user id) is meg lehet adni. Fontos,
	    hogy a $prefix-ben megadott könyvtár az itt megnevezett
	    felhasználó tulajdonában legyen.

      --with-groupname=<csoportnév-vagy-gid>
	    Megadja, hogy milyen a `mailman'-tól eltérõ csoportnév
	    legyen az alapértelmezett. Csak akkor használjuk, ha a
	    `mailman' csoportnév már foglalt. Név helyett annak
	    azonosító számát (group id) is meg lehet adni. Fontos,
	    hogy a $prefix-ben megadott könyvtár az itt megnevezett
	    csoport tulajdonában legyen.

      --with-mail-gid=<csoport-vagy-csoportok>
	    Egyéni csoportot lehet megadni a szkriptek futtatásához
	    a mail wrappernél. <csoport-vagy-csoportok>-nak több
	    csoportazonosító számot vagy csoport nevet is meg lehet
	    adni. A felsoroltak közül a legelsõ, amelyik létezõ
	    csoportot ad meg kerül felhasználásra. Alapesetben a lista
	    értéke `mailman other mail daemon'.

	    Ez beállítás rendszerenként változik, így minden 
	    rendszeren ellenõrizni kell, mivel a csoport azonosítója
	    biztonsági okok miatt rögzítve lesz a wrappper programban.
	    Sendmail-t használó rendszereken a sendmail.cf állomány
	    "DefaultUser" sora tartalmazza a kívánt azonosítót. 
	    (Ha nincs megadva, csak megjegyzésként feltüntetve 
	    /commented out/, akkor is valószínû a jó értéket mutatja...)

	    Az itt megadandó értékhez olvassuk el a saját MTA-nk 
	    dokumentációját vagy konfigurációs állományát.

      --with-cgi-gid=<csoport-vagy-csoportok>
	    Egyéni csoportot lehet megadni a szkriptek futtatásához
	    a CGI wrappernél. <csoport-vagy-csoportok>-nak több
	    csoportazonosító számot vagy csoport nevet is meg lehet
	    adni. A felsoroltak közül a legelsõ, amelyik létezõ
	    csoportot ad meg kerül felhasználásra. Alapesetben a lista
	    értéke `www www-data nobody'.

	    A megfelelõ érték web kiszolgálókként eltérõ lehet. Ezért 
	    minden rendszeren ellenõrizni kell az értékét, mert a csoport
	    azonosítója biztonsági okok miatt rögzítve lesz a CGI
	    wrapper programban. Rossz érték esetén egyetlen Mailman
	    CGI szkript sem fog futni.

	    Apache használók a httpd.conf állomány `Group' részénél
	    találják meg a megfelelõ értéket.

      --with-cgi-ext=<kiterjesztés>
	    A cgi-bin programok kiterjesztését lehet vele megadni.
	    A CGI programok a $PREFIX/cgi-bin könyvtárba kerülnek
	    a megadott kiterjesztéssel ellátva (néhány web
	    kiszolgálónál kötelezõ kiterjesztést is megadni).
	    A <kiterjesztés>-ben a pontot is meg kell adni.

      --with-mailhost
	    A megadott teljes gépnevet fogja részben felhasználni
	    a program a kimenõ e-mailekhez. Telepítés után a 
	    beállított értéket a $PREFIX/Mailman/mm_cfg.py 
	    állományon keresztül módosítani lehet.

      --with-urlhost
            A megadott teljes gépnevet fogja részben felhasználni
	    a program az internetes címekhez. Telepítés után a
            beállított értéket a $PREFIX/Mailman/mm_cfg.py
	    állományon keresztül módosítani lehet.
            
      --with-gcc=no
	    A fordításhoz ne gcc-t használjon, még ha az meg is található
	    a rendszeren. Ilyenkor a $PATH-ból elérhetõnek kell lennie
	    a `cc' fordítóprogramnak.


3. Telepítés utáni ellenõrzés

    A telepítés után ellenõrizni kell a jogokat és tulajdonosokat,
    ehhez használjuk a check_perms programot:

    - cd $prefix

    - bin/check_perms

    Ne próbáljuk meg a forrás könyvtárból a bin/check_perms programot
    futtatni; az csak a telepített könyvtárban (lásd $prefix) fog
    megfelelõen mûködni.

    Ha a program hiba nélkül fut le, akkor nagy valószínûséggel jól
    van beállítva a telepített Mailman :) Ha hibaüzenetet ír ki, akkor
    a hibát lehet lépésrõl lépésre, újratelepítéssel, vagy a check_perms
    program segítségével (ez a legjobb megoldás) kijavítani:

    - Be kell lépni azon felhasználóként, akivel a telepítés történt
      (és aki tulajdonosa a $prefix-ben található állományoknak), vagy
      rootként; és a következõket kell végrehajtani:

    - bin/check_perms -f    parancs kiadása

    - Majd ismételgessük az elõzõ lépéseket, amíg a hiba meg nem szûnik!


4. Végsõ beállítások

    Gratulálunk! Sikeresen telepítettük a Mailman programot. A mûködéséhez
    már csak a web részt és levelezõrészt kell a Mailman-nel egybehangolni. 

    - Ha a levelezõrendszert és web kiszolgálót eltérõ gépeken szeretnénk
      futtatni, a Mailman programot NFS-en megosztani, akkor fontos,
      hogy a gépek rendszerórája egymással szinkronban legyen. A 
      Mailman/LockFile.py állományban a CLOCK_SLOP konstans állítgatásá-
      val a különbözõ rendszerek közötti idõeltérést lehet ellensúlyozni.

    - Állítsuk be a web kiszolgálót, hogy a $prefix/cgi-bin könyvtárban
      található CGI-ket futtassa. Ezt valószínû root-ként kell megtenni.

      A következõkhöz hasonló sort kell majd megadni (a $prefix helyére
      a tényleges könyvtár nevet kell megadni teljes elérési úttal):

          Exec          /mailman/*      $prefix/cgi-bin/*
      vagy:
          ScriptAlias   /mailman/       $prefix/cgi-bin/

      Részletekért olvassuk el a web kiszolgálónk dokumentációját.

    - Fontos meggyõzõdnünk arról, hogy az a felhasználói azonosító, 
      amellyel a CGI fut *nem* tagja-e a `mailman' csoportnak, különben
      a privát archívumot nem lehet majd elérni.

    - A Mailman, Python és GNU logókat másoljuk a web kiszolgáló által
      is elérhetõ könyvtárba. Pl. Apache-nál van egy `icons' könyvtár,
      ahova érdemes a megosztott képeket másolni. A képeket a következõ
      paranccsal tudjuk a megfelelõ könyvtárba másolni:

       % cp $prefix/icons/*.{jpg,png} /apache/eleresi/utvonala/icons

      Ezek után a $prefix/Mailman/mm_cfg.py állományban lehet megadni
      a logók elérést. Valahogy így:

      IMAGE_LOGOS = '/images/'

      Az IMAGE_LOGOS alapértelmezett értéke '/icons/'. Bõvebben a 
      Defaults.py-ben lehet róla olvasni.

    - A levelezõlisták nyilvános Pipermail archívumához a web 
      kiszolgálónak a következõt kell megadni:

      Apache-nál például:

         Alias /pipermail/ $varprefix/archives/public/

      ahol $varprefix többnyire a $prefix, ha a configure-nak nem 
      lett külön megadva a --with-var-prefix kapcsoló.

      Részletekért olvassuk el a web kiszolgálónk dokumentációját.
      A kiszolgálót be kell állítani a szimbolikus kötések követésére
      is különben a Pipermail archívumot nem lehet elérni. Apache
      felhasználóknak a FollowSymLinks opciót kell megadniuk.

      Ha a levelezõlistáink nyilvános archívumait különbözõ nemzeti 
      nyelveken is helyesen szeretnénk megjeleníteni, akkor fontos, hogy
      kapcsoljuk ki a webszerverünk alapértelmezett karakterkódolását a
      Pipermail könyvtárra különben az archívum nem fog megfelelõen
      megjelenni. Ha az alapértelmezett telepítési útvonalat használtuk,
      akkor Apache esetén a következõhöz hasonló sort kell elhelyezni a
      konfigurációs állományában:

      <Directory "/usr/local/mailman/archives/public/">
          AddDefaultCharset Off
      </Directory>

      Ezek után indítsuk újra a web kiszolgálót.

    - Hozzuk létre a "központi" levelezõlistát. A jelszó emlékeztetõk
      ennek a listának a címérõl fognak érkezni. A lista neve általában
      "mailman", de igény szerint változtatható a MAILMAN_SITE_LIST
      változó segítségével, amelyet az mm_cfg.py (lásd késõbb) állományban
      kell megadni.

          % bin/newlist mailman

      Kövessük az utasításokat és bõvebb információkért olvassuk el a
      README.hu állományt.

      Ezek után állítsuk be a központi levelezõlistát. Ebben segítségünkre
      lehet a központi listák általános beállításait tartalmazó sablonfile,
      a misc/sitelist.cfg állomány. A sablont a központi levelezõlistára
      a következõ paranccsal lehet alkalmazni:

	  % bin/config_list -i data/sitelist.cfg mailman

      Mielõtt felhasználnánk a sablont mindenképp nézzük meg, hogy az
      abban található beállítások megfelelnek-e nekünk (annak ellenére, 
      hogy számos beállítást éríntetlenül hagy a sitelist.cfg fájl). Ha 
      módosítottuk a központi listát, akkor utána el ne felejtsük az
      adminisztrációs oldalon is leellenõrízni a beállított értékeket,
      hogy megfelelnek-e az elvárásainknak.  
      
      Ezek után iratkozzunk fel erre a mailman levelezõlistára az 
      adminisztrációs oldalon keresztül. Az e-mailben történõ feliratkozás
      ezen a ponton még nem mûködik, így azt ne használjuk.

    - A crontab beállítása. A Mailman mûködéséhez számos folyamatot
      kell a cron-nak futtatnia. Régebbi verziójú Mailman frissítésekor
      ne felejtsük el az új crontab beállításokat elvégezni. Ha
      egyidejûleg több Mailman-t szeretnénk a rendszerünkön futtatni,
      akkor ügyeljünk a crontab helyes beállítására, mivel a hibás
      crontab beállítások a párhuzamosan mûködõ Mailman-eknél hibához
      vezethet.

      Ha a crontab támogatja az -u kapcsolót, akkor a következõ lépéseket
      root-ként hajtsuk végre. A $prefix/cron/crontab.in felvételéhez
      a crontab-ba a következõ parancsokat kell végrehajtani:

          % cd $prefix/cron
          % crontab -u mailman crontab.in

      Ha használtuk a --with-username kapcsolót, akkor a mailman 
      helyett az ott megadott értéket használjuk az -u kapcsolónál.
      Ha crontab nem támogatja az -u kapcsolót, akkor használjuk a
      következõ parancsokat:

          % cd $prefix/cron
          % su - mailman
          % crontab crontab.in

    - A Mailman qrunner démon futtatásához a következõ parancsot kell
      kiadni a $prefix könyvtárban:

	  % bin/mailmanctl start
      
      Ha azt szeretnénk, hogy minden rendszerindításkor elinduljon a
      program, és az operációs rendszerünk támogatja a chkconfig
      parancsot (pl. RedHat és Mandrake Linux), akkor rootként elég
      a következõ parancsokat kiadni:
      
          % cp scripts/mailman /etc/init.d/mailman
          % chkconfig --add mailman

      (Néhány rendszernél az /etc/init.d helyett /etc/rc.d/init.d -t
      kell használni.)

      Debian-t használók a chkconfig helyett a

         % update-rc.d mailman defaults

      parancsot használják.

      Azon Unix rendszereknél, amelyek nem támogatják a chkconfig
      programot másoljuk át a scripts/mailman állományt az init 
      könyvtárba:
      
          % cp misc/mailman /etc/init.d

      és hozzuk létre a szimbolikus kötéseket rootként a következõ 
      parancsokkal:

          % cd /etc/rc.d/rc0.d
          % ln -s ../init.d/mailman K12mailman
          % cd ../rc1.d
          % ln -s ../init.d/mailman K12mailman
          % cd ../rc2.d
          % ln -s ../init.d/mailman S98mailman
          % cd ../rc3.d
          % ln -s ../init.d/mailman S98mailman
          % cd ../rc4.d
          % ln -s ../init.d/mailman S98mailman
          % cd ../rc5.d
          % ln -s ../init.d/mailman S98mailman
          % cd ../rc6.d
          % ln -s ../init.d/mailman K12mailman
      
   - Ellenõrizzük, hogy a Defaults.py állományban a DEFAULT_EMAIL_HOST
     és DEFAULT_URL_HOST változók helyes értéket mutatnak. Ha nem, 
     akkor a helyes értékkel ezeket a változókat az mm_cfg.py állományba
     helyezzük el. Megjegyezzük, hogyha ezen két változó valamelyikét
     modósítjuk, akkor lehet hogy szükséges az mm_cfg.py állományba ezen
     változók után még megadni a következõ parancsot is:

      add_virtualhost(DEFAULT_URL_HOST, DEFAULT_EMAIL_HOST)
   
    
5. Mailman finomhangolása

    A következõ beállításokat a 2. fejezetben tárgyalt felhasználóként
    hajtsuk végre.

    - A $prefix/Mailman/Defaults.py számos beállítást tartalmaz. Ha 
      ezek valamelyikét meg akarjuk változtatni, akkor azt a 
      $prefix/Mailman/mm_cfg.py állományban kell megadni és SOHA SEM
      a Defaults.py állományban. A Defaults.py-ben minden beállításról
      bõvebb információ található. Egyes beállítások megváltoztatásának
      nincs hatása már létrehozott listáknál, ha szeretnénk a már létezõ
      listákra is alkalmazni a módosított beállításokat, akkor újra létre
      kell hozni az adott listát. A listákat az adminisztrációs oldalon
      keresztül, vagy parancssorban a bin/withlist vagy bin/config_list
      parancs segítségével lehet beállítani.

      A telepítés nem írja felül a létezõ mm_cfg.py állományt, így
      abban nyugodtan el lehet helyezni a szükséges személyes beállításokat.

      Fontos: Soha *ne* változtassuk meg a HOME_DIR vagy MAILMAN_DIR
      változók értékét. Ezeket automatikusan a telepítõ állítja be.

      Magyar nyelv ékezetes betûinek helyes megjelenítéséhez az alábbi
      sorokat helyezzük el az mm_cfg.py állományban:

        DEFAULT_CHARSET='iso-8859-2'
        VERBATIM_ENCODING=['iso-8859-2']

   -  Ha azt szeretnénk, hogy a rendszer alapértelmezett nyelve a
      magyar legyen, akkor adjuk az mm_cfg.py-hez a következõ sort:
      
        DEFAULT_SERVER_LANGUAGE='hu'

    - Rendszerszintû jelszó létrehozása a következõ paranccsal történik:

        % $prefix/bin/mmsitepass <rendszerszintû-jelszó>

      Ezt a jelszót meg lehet adni, mind felhasználó-, mind admin-
      szintû beállítások megváltoztatásánál. A rendszer adminisztrátor
      így képes a listák beállításának módosítására is.

      Itt lehet megadni a rendszerhez használatos "lista létrehozó"
      jelszót is (ezzel lehet majd a rendszerszintû jelszó mellett
      listákat létrehozni és törölni web-felületrõl). A jelszó 
      beállításához a "mmsitepass"-t a -c kapcsolóval kell futtatni.


6. Munka megkezdése

    Lásd a README.hu állomány "ELSÕ SAJÁT LEVELEZÕLISTA LÉTREHOZÁSA" 
    szakaszát egy próba levelezõlista létrehozásához.


7. Problémák
  
    Ha hibát észlelünk a Mailman mûködése során, akkor elõször olvassuk
    el a "Gyakori hibák" részt. Ha ott nem találunk megoldást, akkor 
    nézzük meg a FAQ.hu állományt és az Interneten az online FAQ Wizard-ot.
    Ezek után ellenõrizzük a $prefix/logs/error állományban a Mailman
    bejegyzéseket.

    A naplóállományok helye rendszerenként változik. Lehet az a
    /var/log/maillog, vagy a /var/log/syslog. Számos gépen a napló-
    állományok az /adm/log/ könyvtárban és nem a /var/log könyvtárban
    találhatóak.

    Hiba esetén küldjük el a hiba leírását a mailman-users@python.org 
    címre. Mondjuk el, hogy mit csináltunk a hiba elõtt és hogy mit
    tartalmaznak ezzel kapcsolatban a naplóállományok. Ezen túl adjuk
    meg a gépünk paramétereit és a használt Python, Mailman verziószámát.

8. Gyakori hibák

    Hiba: Az összes Mailman oldalra a "404 File not found" üzenetet kapom.

    Megoldás: Nincs megfelelõen beállítva a web kiszolgálója a Mailman
   	      CGI parancsok futtatására. Gyõzõdjünk meg a következõkrõl:
              
	      1) A web kiszolgáló be van állítva a $prefix/cgi-bin
	         futtatására
              2) A web kiszolgáló megfelelõen lett újraindítva.

              Olvassuk el a web kiszolgálónk dokumentációját ezen 
	      módosítások végrehajtásáról.


    Hiba: Az összes Mailman oldal "Internal Server Error" jelez.

    Megoldás: A legvalószínûbb, hogy a CGI szkripteknek rossz GID vagy
              UID lett megadva. Nézzük meg a naplóállományokat. Ha a
              következõ sorhoz hasonlót találunk benne:

                  Attempt to exec script with invalid gid 51, expected 99

              akkor újra kell telepíteni a Mailmant és a $CGI-GID-nek 51-et
              adjunk meg a telepítés részben ismertetettek szerint.


    Hiba:     A listára küldött levelem visszajön azzal az üzenettel, hogy 
              a lista nem található!

    Megoldás: Valószínûleg nem lettek a szükséges bejegyzések a rendszer 
              alias adatbázisához adva a newlist parancs futtatása után. Ha
              mégis hozzá lettek adva, akkor valószínû nem lett frissítve az
              adatbázis, vagy nem lett futtatva a newaliases parancs. Ekkor 
              az 5. fejezetben tárgyaltak szerint járjunk el.


    Hiba:     A listára küldött levelem visszajön a következõ üzenettel:
              "unknown mailer error".

    Megoldás: A legvalószínûbb, hogy nem megfelelõ GID vagy UID lett megadva
              a levelezõrésznek. Nézzük meg a naplóállományokat. Ha a
              következõhöz hasonlót találunk benne:

                  Attempt to exec script with invalid gid 51, expected 99

              akkor újra kell telepíteni a Mailmant és a $MAIL_GID-nek 51-et
              adjunk meg, ahogy az a telepítési részben le van írva. Postfix
              felhasználók olvassák el a következõ hibát is, amely náluk
	      fordul elõ leggyakrabban.


    Hiba:     MTA-nak Postfixet használok és a mail wrapper programok hibás
              GID-et említenek a naplóállományokban.

    Megoldás: A Postfix main.cf állományában az "alias_maps" változóknál
	      hozzunk létre egy új alias állomány bejegyzést. Ezt az új
              állományt a Mailman könyvtárába, vagy olyan helyre ahol a
              Mailman-nak írási joga is van helyezzük el;
	      *mailman felhasználóként* futtassuk a Postfix "postalias"
              parancsát ezen az állományon.

              % postalias <alias_fájl_neve>

              Még mindig mailman felhasználóként adjuk ki a következõt:

              % python -c'import os; print os.getgid()' 
              
	      Ezzel megkapjuk azt a csoport azonosító számot, amelyet meg
	      kell adnunk a Mailman telepítésekor a mail wrapper programok
              számára. Legyen ez mondjuk "joGID". Konfiguráljuk újra a 
	      Mailman-t a következõ paranccsal:

              % ./configure --with-mail-gid=joGID

	      Olvassuk el a README.POSTFIX.hu állományt a Postfix és
	      Mailman összekapcsolásához.


    Hiba:     A listára küldött levelem visszajön a következõ üzenettel:
              "sh: mailman not available for sendmail programs"

    Megoldás: A rendszer sendmail korlátozott shell-t használ (smrsh). Be
              kell állítani az smrsh-t úgy, hogy egy szimbolikus hivatkozást
              hozunk létre a mail wrapper-rõl (%prefix/mail/mailman) abba
              a könyvtárba, amelyben az engedélyezett smrsh-k futhatnak.

              Ezt a könyvtárat általában a /var/admin/sm.bin, 
              /usr/admin/sm.bin vagy /etc/smrsh helyen találhatjuk.

              Debian Linux alatt a megadott /usr/lib/sm.bin könyvtár
              nem mûködik, ezért hozzuk létre az /usr/admin/sm.bin
              könyvtárat és ide hozzuk létre a szimbolikus hivatkozásokat.


    Hiba:     Összezavarodtam a configure futtatásánál. Hogyan tudom
              törölni a felesleges fájlokat újratelepítéshez?

    Megoldás: % make clean
              % ./configure --with-jó-kapcsolók
              % make install



Local Variables:
mode: indented-text
indent-tabs-mode: nil
End:
