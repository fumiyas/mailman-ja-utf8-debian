#! /bin/sh -e
## 65_donot_add_empty_cc.dpatch, by Alexis S. L. Carvalho <alexis@cecm.usp.br>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: If Mailman is about to send out a Cc to other parties, then be
## DP: sure it has a value, otherwise do not ever add Cc.

[ -f debian/patches/00patch-opts ] && . debian/patches/00patch-opts
patch_opts="${patch_opts:--f --no-backup-if-mismatch ${2:+-d $2}}"

if [ $# -lt 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch) patch $patch_opts -p1 < $0;;
    -unpatch) patch $patch_opts -p1 -R < $0;;
    *)
        echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
        exit 1;;
esac

exit 0
@DPATCH@
--- mailman-2.1.5/Mailman/Handlers/AvoidDuplicates.py.orig	2004-10-17 17:35:40.000000000 +0000
+++ mailman-2.1.5/Mailman/Handlers/AvoidDuplicates.py	2004-10-17 17:37:12.000000000 +0000
@@ -92,4 +92,6 @@
     msgdata['recips'] = newrecips
     # RFC 2822 specifies zero or one CC header
     del msg['cc']
-    msg['Cc'] = COMMASPACE.join([formataddr(i) for i in ccaddrs.values()])
+    newcc = COMMASPACE.join([formataddr(i) for i in ccaddrs.values()])
+    if newcc:
+        msg['Cc'] = newcc
