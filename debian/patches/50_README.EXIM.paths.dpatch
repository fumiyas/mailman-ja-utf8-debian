#! /bin/sh -e
## 50_README.EXIM.paths.dpatch by Tollef Fog Heen <tfheen@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Makes sure we're called with the right UID and GID

[ -f debian/patches/00patch-opts ] && . debian/patches/00patch-opts
patch_opts="${patch_opts:--f --no-backup-if-mismatch ${2:+-d $2}}"

if [ $# -lt 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch) patch $patch_opts -p1 < $0;;
    -unpatch) patch $patch_opts -p1 -R < $0;;
    *)
        echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
        exit 1;;
esac

exit 0
@DPATCH@
--- mailman-2.1.5/README.EXIM.orig	2004-10-17 19:09:42.000000000 +0000
+++ mailman-2.1.5/README.EXIM	2004-10-17 19:09:15.000000000 +0000
@@ -4,7 +4,8 @@
 [This is derived from Nigel Metheringham's "HOWTO - Using Exim and
  Mailman together", which covers Mailman 2.0.x and Exim 3.  It
  has been updated to cover Mailman 2.1 and Exim 4.  The original
- document is here: http://www.exim.org/howto/mailman.html]
+ document is here: http://www.exim.org/howto/mailman.html and
+ has been modified to reflect pathes used by the Debian package.]
 
 
 Mailman configuration
@@ -14,7 +15,13 @@
 options detailed in the Mailman install documentation.  The Exim
 configuration is transparent to Mailman.  The user and group settings
 for Mailman must match those in the config fragments given below.
-   
+
+Although not really required for operation you may want to set 
+
+  MTA=None
+
+in your /etc/mailman/mm_cfg.py to suppress any mention of aliases
+in messages generated on list creation.
 
 Exim configuration
 ------------------
@@ -33,7 +40,7 @@
 
 The configuration file excerpts below are for use in an already
 functional Exim configuration, which accepts mail for the domain in
-which the list resides.  If this domain is separate from the others
+which the list resides.  If this domain is not the only domain
 handled by your Exim configuration, then you'll need to:
 
   * add the list domain, "my.list.domain" to local_domains
@@ -72,13 +79,13 @@
 
   # Home dir for your Mailman installation -- aka Mailman's prefix
   # directory.
-  MAILMAN_HOME=/usr/local/mailman
+  MAILMAN_HOME=/var/lib/mailman
   MAILMAN_WRAP=MAILMAN_HOME/mail/mailman
 
   # User and group for Mailman, should match your --with-mail-gid
   # switch to Mailman's configure script.
-  MAILMAN_USER=mailman
-  MAILMAN_GROUP=mailman
+  MAILMAN_USER=list
+  MAILMAN_GROUP=daemon
 
 
 Transport for Exim 3
@@ -171,7 +178,7 @@
     This is bad because it will cause Exim to switch into queue mode and
     severely delay delivery of your list messages.
     The way to fix this is to set mailman's SMTP_MAX_SESSIONS_PER_CONNECTION
-    (in ~mailman/Mailman/mm_cfg.py) to a smaller value than Exim's
+    (in /etc/mailman/mm_cfg.py) to a smaller value than Exim's
     smtp_accept_queue_per_connection
 
   * Mailman should ignore Exim delay warning messages, even though
@@ -271,11 +278,11 @@
 Doing VERP with Exim and Mailman
 --------------------------------
 
-VERP will send one email, with a separate envelope sender (return path),
-for each of your subscribers -- read the information in
-~mailman/Mailman/Default.py for the options that start with VERP.  In a
-nutshell, all you need to do to enable VERP with Exim is to add these
-lines to ~mailman/Mailman/mm_cfg.py:
+VERP will send one email, with a separate envelope sender (return
+path), for each of your subscribers -- read the information in
+/var/lib/mailman/Mailman/Defaults.py for the options that start with
+VERP.  In a nutshell, all you need to do to enable VERP with Exim is
+to add these lines to /etc/mailman/mm_cfg.py:
 
   VERP_PASSWORD_REMINDERS = 1
   VERP_PERSONALIZED_DELIVERIES = 1
@@ -288,6 +295,10 @@
 Virtual Domains
 ---------------
 
+NOTE: The approach described here is not applicable to the Debian
+      package, it's only included for reference. Be warned: you're on
+      your own if you follow this route.
+
 One approach to handling virtual domains is to use a separate Mailman
 installation for each virtual domain.  (Currently, this is the only way
 to have lists with the same name in different virtual domains handled by
